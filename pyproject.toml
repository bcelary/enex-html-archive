[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "enex-html-archive"
version = "0.1.0"
description = "Convert Evernote .enex files to organized HTML archives with media preservation"
readme = "README.md"
license = "MIT"
authors = [
    { name = "B. Celary", email = "bcelary@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
keywords = ["evernote", "enex", "html", "converter", "notes"]
requires-python = ">=3.9"
dependencies = []

[project.optional-dependencies]
dev = [
    "black>=25.0.0",
    "ruff>=0.12.0",
    "mypy>=1.17.0",
    "pre-commit>=3.0.0",
    "mdformat>=0.7.22",
    "mdformat-gfm>=0.3.0",
    "mdformat-black>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/bcelary/enex-html-archive"
Repository = "https://github.com/bcelary/enex-html-archive.git"
Issues = "https://github.com/bcelary/enex-html-archive/issues"

[project.scripts]
enex-html-archive = "enex2html.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/enex2html"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # ruff-specific
    "PTH", # flake8-use-pathlib (good since you use pathlib)
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate (commented code)
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert
    "T201",  # print statements (allowed in CLI tools)
]

[tool.ruff.lint.isort]
known-first-party = ["enex2html"]

[tool.mypy]
python_version = "3.9"
mypy_path = "src"
packages = ["enex2html"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
# Additional checks for None/Optional handling
strict_optional = true

[tool.mdformat]
wrap = "no"
number = false
